pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "prembablu/healthcare:1.0"
    PEM_FILE = "./terraform_files/new.pem"
    REGION = "us-east-1"
  }

  stages {

    stage('Git Checkout') {
      steps {
        echo '📦 Cloning repository...'
        git branch: 'master', url: 'https://github.com/gitbablu/star-agile-health-care.git'
      }
    }

    stage('Build & Package') {
      steps {
        echo '🔧 Building Maven project...'
        sh 'mvn clean package -DskipTests'
      }
    }

    stage('Build Docker Image') {
      steps {
        echo '🐳 Building Docker image...'
        sh "docker build -t ${DOCKER_IMAGE} ."
      }
    }

    stage('Docker Login & Push') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'DOCKER_PASS', usernameVariable: 'DOCKER_USER')]) {
          sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
        }
        echo '🚀 Pushing image to Docker Hub...'
        sh "docker push ${DOCKER_IMAGE}"
      }
    }

    stage('Terraform Apply - Setup EC2') {
      steps {
        dir('terraform_files') {
          echo '🌍 Running Terraform to create infrastructure...'
          sh 'terraform init'
          sh 'terraform validate'
          sh 'terraform apply --auto-approve'

          echo '⏳ Waiting for EC2 to initialize...'
          sh 'sleep 40'
        }
      }
    }

    stage('Fetch EC2 Public IP') {
      steps {
        dir('terraform_files') {
          script {
            echo '📡 Fetching EC2 public IP from Terraform output...'
            env.EC2_IP = sh(script: "terraform output -raw public_ip", returnStdout: true).trim()
            echo "✅ EC2 Public IP: ${EC2_IP}"
          }
        }
      }
    }

    stage('Deploy to Minikube on EC2') {
      steps {
        echo '🚀 Deploying application on Minikube inside EC2...'
        sh '''
        sudo chmod 600 ${PEM_FILE}
        sudo scp -o StrictHostKeyChecking=no -i ${PEM_FILE} deployment.yml ubuntu@${EC2_IP}:/home/ubuntu/
        sudo scp -o StrictHostKeyChecking=no -i ${PEM_FILE} service.yml ubuntu@${EC2_IP}:/home/ubuntu/

        ssh -o StrictHostKeyChecking=no -i ${PEM_FILE} ubuntu@${EC2_IP} "
          echo '🔥 Starting Minikube cluster...'
          sudo minikube start --driver=docker &&
          echo '🕐 Waiting for cluster to stabilize...' &&
          sleep 40 &&
          echo '📦 Deploying app to Kubernetes...' &&
          kubectl apply -f /home/ubuntu/deployment.yml &&
          kubectl apply -f /home/ubuntu/service.yml &&
          echo '🔍 Checking pod status...' &&
          kubectl get pods -o wide
        "
        '''
      }
    }
  }

  post {
    success {
      echo "✅ Pipeline completed successfully. App deployed on EC2 Minikube at: ${EC2_IP}"
    }
    failure {
      echo '❌ Pipeline failed. Check Jenkins console logs for details.'
    }
  }
}
